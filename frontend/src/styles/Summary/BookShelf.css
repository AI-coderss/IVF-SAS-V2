/* BookShelf.css */

:root {
  --book-width-3d: 160px;
  --book-height-3d: 240px;
  --book-depth-3d: 33px;
  --cover-offset-3d: 2px;
}

.bookshelf {
  width: 100%; /* Occupy the 10% width from .section.bookshelf-section */
  height: 100%; /* Fill the height of .section.bookshelf-section */
  padding: 20px 10px;
  background-color: #ffffff;
  display: flex;
  flex-direction: column;
  align-items: center;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  scrollbar-width: none;
  -ms-overflow-style: none;
}

.bookshelf::-webkit-scrollbar {
  display: none;
}

.shelf-title {
  font-size: 1.2rem;
  margin-bottom: 20px;
  font-weight: bold;
  color: #333;
  text-align: center;
  flex-shrink: 0;
}

.book-item {
  width: var(--book-width-3d);
  height: var(--book-height-3d);
  margin-bottom: 40px;
  cursor: pointer;
  position: relative;
  text-align: center;
  flex-shrink: 0;
  perspective: 1200px;
  transform-style: preserve-3d;
  transform: rotateY(-30deg);
  transition: transform 1s ease, box-shadow 0.4s ease-out;
  animation: 1s ease 0s 1 initBookShelfAnimation;
}

@keyframes initBookShelfAnimation {
  0% {
    transform: rotateY(0deg);
  }
  100% {
    transform: rotateY(-30deg);
  }
}

.book-item:hover {
  transform: rotateY(0deg) translateY(-10px);
  box-shadow: 0 18px 30px rgba(0, 0, 0, 0.25);
}

.book-item.selected {
  border: 2px solid #007bff; /* Consider outline for 3D or a less intrusive visual cue */
  background-color: #eef6ff; /* This might look odd with 3D elements; test visually */
  transform: rotateY(10deg) translateY(-15px) translateZ(20px);
  /* Ensure selected state stands out without breaking the 3D illusion */
}

.book-image { /* This is now the FRONT COVER */
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 0 var(--cover-offset-3d) var(--cover-offset-3d) 0;
  position: absolute;
  top: 0;
  left: 0;
  box-shadow: 5px 5px 20px #ffffff; /* Inner shadow/highlight on cover */
  transform: translateZ(0); /* Or a tiny positive value to ensure it's on top of ::before */
  transition: none; /* Transitions are on .book-item */
  z-index: 1; /* Above pages/spine */
}

/* PAGES/SPINE (Side of the book) */
.book-item::before {
  content: '';
  position: absolute;
  width: var(--book-depth-3d);
  height: calc(var(--book-height-3d) - 2 * var(--cover-offset-3d));
  top: var(--cover-offset-3d);
  left: 0;
  background: #f8f8f0; /* Creamy page color */
  border: 1px solid #e0e0d0;
  box-sizing: border-box;
  transform-origin: center left;
  transform:
    translateX(calc(var(--book-width-3d) - var(--book-depth-3d) / 2 - var(--cover-offset-3d)))
    rotateY(90deg)
    translateX(calc(var(--book-depth-3d) / 2));
  z-index: 0; /* Behind front cover image content */
}

/* BACK COVER */
.book-item::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: #a5a5a5; /* Darker back cover color */
  border-radius: 0 var(--cover-offset-3d) var(--cover-offset-3d) 0;
  transform: translateZ(calc(-1 * var(--book-depth-3d)));
  box-shadow: -10px 0 30px rgba(0, 0, 0, 0.3);
  z-index: -1; /* Furthest back */
}

.book-title {
  margin-top: 10px;
  font-size: 0.85rem;
  color: #444;
  font-weight: 500;
  position: relative; /* Keep it out of the 3D transform of book-item if it were inside */
  width: var(--book-width-3d); /* Match book width */
  transform: translateZ(0); /* Reset any inherited 3D transformation if it were nested differently */
  /* Ensure text is readable and not part of the 3D rotation if it's meant to be flat */
}

/* --- RESPONSIVE OVERRIDES --- */
@media (max-width: 768px) {
  .bookshelf {
    flex-direction: row;
    flex-wrap: nowrap;
    overflow-x: auto;
    overflow-y: hidden;
    max-width: 100%;
    height: auto; /* Adjust height for horizontal scroll */
    border-right: none;
    border-bottom: 1px solid #ccc;
    padding: 10px;
    max-height: none; /* Remove vertical max-height */
  }

  .bookshelf::-webkit-scrollbar { /* Show scrollbar for horizontal */
    display: block; /* Or flex, depending on desired track behavior */
    height: 8px;
  }
  .bookshelf::-webkit-scrollbar-track { background: #f1f1f1; border-radius: 10px; }
  .bookshelf::-webkit-scrollbar-thumb { background: #888; border-radius: 10px; }
  .bookshelf::-webkit-scrollbar-thumb:hover { background: #555; }

  .book-item {
    width: 140px; /* Flatter book width */
    height: auto; /* Auto height for flatter books based on image aspect */
    min-width: 140px;
    margin: 0 10px; /* Horizontal margin */
    margin-bottom: 15px; /* Space for title below and scrollbar */
    perspective: none;
    transform-style: flat; /* Disable 3D */
    animation: none;
    transform: none !important; /* Reset all transforms */
    transition: transform 0.2s ease-out, box-shadow 0.2s ease-out; /* Simpler transition */
  }

  .book-item:hover {
    transform: translateY(-5px); /* Simple lift on hover */
    box-shadow: 0 8px 14px rgba(0, 0, 0, 0.15);
  }

  .book-item.selected {
    border: 2px solid #007bff;
    background-color: #eef6ff;
    transform: translateY(-5px) scale(1.02); /* Simple selected effect */
    box-shadow: 0px 0px 15px rgba(0, 0, 128, 0.5); /* More prominent shadow for selected */
  }

  .book-image {
    position: relative; /* Back to normal flow */
    border-radius: 6px; /* Original mobile border-radius */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Simpler shadow for flat items */
    /* transform and transition are reset by .book-item */
    object-fit: cover;
  }

  .book-item::before,
  .book-item::after {
    display: none !important; /* Hide 3D pseudo-elements */
  }

  .book-title {
    transform: none;
    width: auto; /* Auto width for title */
    margin-top: 8px;
  }

  .shelf-title {
    display: none; /* Hide main shelf title in horizontal mobile view */
  }
}

@media (max-width: 480px) {
  .bookshelf { padding: 6px; }
  .book-item { min-width: 110px; width: 110px; margin: 0 5px 10px 5px; }
  .book-item:hover { transform: translateY(-3px); }
  .book-title { font-size: 0.75rem; }
}

@media (max-width: 600px) and (min-width: 481px) {
  .bookshelf { padding: 8px; }
  .book-item { min-width: 120px; width: 120px; margin: 0 8px 12px 8px; }
  .book-item:hover { transform: translateY(-4px); }
  .book-title { font-size: 0.8rem; }
}

/* This rule was duplicated in your original CSS, ensure it's correctly placed or merged if necessary */
/* It handles sizes between tablet and where 3D might be more stable if 768px wasn't flattening */
@media (max-width: 900px) and (min-width: 601px) {
    /* If screen width is <= 768px, styles from (max-width: 768px) apply, making it flat & horizontal. */
    /* If screen width is > 768px (e.g., 800px), it will use desktop (vertical 3D) styles by default. */
  .bookshelf {
    /* This padding applies regardless of vertical/horizontal if not overridden by more specific (e.g. max-width: 768px) */
    padding: 10px;
    /* max-width: 100%; /* Already applied by max-width: 768px if active */
  }

}


/* Large devices (small laptops, 901px to 1200px) - 3D effect IS active here */
@media (max-width: 1200px) and (min-width: 901px) {
  .bookshelf {
    /* This max-width acts as a cap if 10% of screen width > 200px */
    /* max-width: 200px; /* Retain if this is desired behavior for content area */
    padding: 14px 8px;
  }
  .book-item {
    /* Uses the 3D dimensions defined by CSS variables */
    margin-bottom: 30px;
  }
   .book-title {
      font-size: 0.9rem; /* Specific title size for this range if needed */
  }
}